# EXAMPLE CONFIGURATION FILE FOR IMPORTING FROM CSV FILES
#
# Copyright (c) 2009-2019 Tom Keffer <tkeffer@gmail.com> and Gary Roderick.
# See the file LICENSE.txt for your rights.

##############################################################################
#sudo weectl import --config /etc/weewx/weewx3.conf --import-config /etc/weewx/import/csv-wswin5.conf --verbose

# Specify the source. Available options are:
#   CSV - import obs from a single CSV format file
#   WU - import obs from a Weather Underground PWS history
#   Cumulus - import obs from a one or more Cumulus monthly log files
#   WD - import obs from a one or more WD monthly log files
# Format is:
#   source = (CSV | WU | Cumulus)
source = CSV

##############################################################################

[CSV]
    # Parameters used when importing from a CSV file

    # Path and name of our CSV source file. Format is:
    #   file = full path and filename
    file = /etc/weewx/weewx_EXP_20220101.CSV

    # The character used to separate fields. Format is:
    #   delimiter = <single character>
    # Default is , (comma).
    delimiter = ;

    # If there is no mapped interval field how will the interval field be
    # determined for the imported records. Available options are:
    #   derive - Derive the interval field from the timestamp of successive
    #            records. This setting is best used when the imported records
    #            are equally spaced in time and there are no missing records.
    #   conf   - Use the interval setting from weewx.conf. This setting is
    #            best used if the records to be imported have been produced by
    #            WeeWX using the same archive interval as set in weewx.conf on
    #            this machine.
    #   x      - Use a fixed interval of x minutes for every record. This
    #            setting is best used if the records to be imported are
    #            equally based in time but there are some missing records.
    #
    # Note: If there is a mapped interval field then this setting will be
    #       ignored.
    # Format is:
    #   interval = (derive | conf | x)
     #interval = derive
    interval = 5
    
    # Should the [StdQC] max/min limits in weewx.conf be applied to the
    # imported data. This may be useful if the source has extreme values that
    # are clearly incorrect for some observations. Available options are:
    #   True  - weewx.conf [StdQC] max/min limits are applied.
    #   False - weewx.conf [StdQC] max/min limits are not applied.
    # Format is:
    #   qc = (True | False)
    qc = True

    # Should any missing derived observations be calculated from the imported
    # data if possible. Available options are:
    #   True  - Any missing derived observations are calculated.
    #   False - Any missing derived observations are not calculated.
    # Format is:
    #   calc_missing = (True | False)
    calc_missing = True

    # Specify how imported data fields that contain invalid data (eg a numeric
    # field containing non-numeric data) are handled. Available options are:
    #   True  - The invalid data is ignored, the WeeWX target field is set to
    #           None and the import continues.
    #   False - The import is halted.
    # Format is:
    #   ignore_invalid_data = (True | False)
    # Default is True.
    ignore_invalid_data = True

    # Imported records are written to archive in transactions of tranche
    # records at a time. Increase for faster throughput, decrease to reduce
    # memory requirements. Format is:
    #   tranche = x
    # where x is an integer
    tranche = 250

    # Specify whether a UV sensor was used to produce any UV observations.
    # Available options are:
    #   True  - UV sensor was used and UV data will be imported.
    #   False - UV sensor was not used and any UV data will not be imported.
    #           UV fields will be set to None/NULL.
    # For a CSV import UV_sensor should be set to False if a UV sensor was
    # NOT present when the import data was created. Otherwise it may be set to
    # True or omitted. Format is:
    #   UV_sensor = (True | False)
    UV_sensor = True

    # Specify whether a solar radiation sensor was used to produce any solar
    # radiation observations. Available options are:
    #   True  - Solar radiation sensor was used and solar radiation data will
    #           be imported.
    #   False - Solar radiation sensor was not used and any solar radiation
    #           data will not be imported. radiation fields will be set to
    #           None/NULL.
    # For a CSV import solar_sensor should be set to False if a solar radiation
    # sensor was NOT present when the import data was created. Otherwise it may
    # be set to True or omitted. Format is:
    #   solar_sensor = (True | False)
    solar_sensor = True

    # Date-time format of CSV field from which the WeeWX archive record
    # dateTime field is to be extracted. wee_import first attempts to interpret
    # date/time info in this format, if this fails it then attempts to
    # interpret it as a timestamp and if this fails it then raises an error.
    # Uses Python strptime() format codes.
    # raw_datetime_format = Python strptime() format string
    raw_datetime_format = %d.%m.%Y %H:%M

    # Does the imported rain field represent the total rainfall since the last
    # record or a cumulative value. Available options are:
    #   discrete   - rain field represents total rainfall since last record
    #   cumulative - rain field represents a cumulative rainfall reset at
    #                midnight
    # rain = (discrete | cumulative)
    rain = discrete

    # Lower and upper bounds for imported wind direction. It is possible,
    # particularly for a calculated direction, to have a value (eg -45) outside
    # of the WeeWX limits (0 to 360 inclusive). Format is:
    #
    # wind_direction = lower,upper
    #
    # where :
    #   lower is the lower limit of acceptable wind direction in degrees
    #   (may be negative)
    #   upper is the upper limit of acceptable wind direction in degrees
    #
    # Imported values from lower to upper will be normalised to the range 0 to
    # 360. Values outside of the parameter range will be stored as None.
    # Default is -360,360.
    wind_direction = 1,360

    # Map CSV record fields to WeeWX archive fields. Format is:
    #
    #   weewx_archive_field_name = csv_field_name, weewx_unit_name
    #
    # where:
    #   weewx_archive_field_name - An observation name in the WeeWX database
    #                              schema.
    #   csv_field_name           - The name of a field from the CSV file.
    #   weewx_unit_name          - The name of the units, as defined in WeeWX,
    #                              used by csv_field_name. wee_import will do
    #                              the necessary conversions to the unit system
    #                              used by the WeeWX archive.
    # For example,
    #   outTemp = Temp, degree_C
    # would map the CSV field Temp, in degrees C, to the archive field outTemp.
    #
    # A mapping for WeeWX field dateTime is mandatory and the WeeWX unit name
    # for the dateTime mapping must be unix_epoch. For example,
    #   dateTime = csv_date_and_time, unix_epoch
    # would map the CSV field csv_date_and_time to the WeeWX dateTime field with
    # the csv_date_and_time field being interpreted first using the format
    # specified at the raw_datetime_format config option and if that fails as a
    # unix epoch timestamp.
    #
    # Field mapping to the WeeWX usUnits archive field is currently not
    # supported. If a usUnits field exists in the CSV data it should not be
    # mapped, rather WeeWX unit names should included against each field to be
    # imported in the field map.
    #
    # WeeWX archive fields that do not exist in the CSV data may be omitted.
    # Any omitted fields that are derived (eg dewpoint) may be calculated
    # during import using the equivalent of the WeeWX StdWXCalculate service
    # through setting the calc-missing parameter above.
#    "group_altitude"    : "meter",
#    "group_amp"         : "amp",
#    "group_concentration": "microgram_per_meter_cubed",
#    "group_count"       : "count",
#    "group_data"        : "byte",
#    "group_db"          : "dB",
#    "group_degree_day"  : "degree_C_day",
#    "group_deltatime"   : "second",
#    "group_direction"   : "degree_compass",
#    "group_distance"    : "km",
#    "group_elapsed"     : "second",
#    "group_energy"      : "watt_hour",
#    "group_energy2"     : "watt_second",
#    "group_fraction"    : "ppm",
#    "group_illuminance" : "lux",
#    "group_interval"    : "minute",
#    "group_length"      : "cm",
#    "group_moisture"    : "centibar",
#    "group_percent"     : "percent",
#    "group_power"       : "watt",
#    "group_pressure"    : "mbar",
#    "group_pressurerate": "mbar_per_hour",
#    "group_radiation"   : "watt_per_meter_squared",
#    "group_rain"        : "cm",
#    "group_rainrate"    : "cm_per_hour",
#    "group_speed"       : "km_per_hour",
#    "group_speed2"      : "km_per_hour2",
#    "group_temperature" : "degree_C",
#    "group_time"        : "unix_epoch",
#    "group_uv"          : "uv_index",
#    "group_volt"        : "volt",
#    "group_volume"      : "liter"


    [[FieldMap]]

        [[[dateTime]]]
            source_field = Date
            unit = unix_epoch
        [[[barometer]]]
            source_field = 133
            unit = mbar
        [[[inTemp]]]
            source_field = 1
            unit = degree_C
        [[[outTemp]]]
            source_field = 2
            unit = degree_C
        [[[inHumidity]]]
            source_field = 17
            unit = percent
        [[[outHumidity]]]
            source_field = 18
            unit = percent
        [[[windSpeed]]]
           source_field = 35
           unit = km_per_hour
        [[[windDir]]]
           source_field = 36
           unit = degree_compass
        [[[windGust]]]
           source_field = 45
           unit = km_per_hour
        [[[windGustDir]]]
           source_field = 96
           unit = degree_compass
        #[[[rainRate]]]
        #   source_field = rate
        #   unit = mm_per_hour
        [[[rain]]]
           source_field = 34
           unit = mm
           is_cumulative = True
        [[[ET]]]
           source_field = 40
           unit = mm
           #is_cumulative = True
        [[[UV]]]
           source_field = 41
           unit = uv_index
        [[[radiation]]]
           source_field = 42
           unit = watt_per_meter_squared
        [[[dewpoint]]]
           source_field = 43
           unit = degree_C
        [[[windchill]]]
           source_field = 44
           unit = degree_C
        [[[rxCheckPercent]]]
           source_field = 46
           unit = percent
        [[[extraTemp1]]]
           source_field = 3
           unit = degree_C
#        [[[extraTemp2]]]
#           source_field = 4
#           unit = degree_C
#        [[[extraTemp3]]]
#           source_field = 5
#           unit = degree_C
#        [[[extraTemp4]]]
#           source_field = 6
#           unit = degree_C
#        [[[extraTemp5]]]
#           source_field = 7
#           unit = degree_C
#        [[[extraTemp6]]]
#           source_field = 8
#           unit = degree_C
        [[[extraHumid1]]]
            source_field = 19
            unit = percent
#        [[[extraHumid2]]]
#            source_field = 20
#            unit = percent
#        [[[extraHumid3]]]
#            source_field = 21
#            unit = percent
#        [[[extraHumid4]]]
#            source_field = 22
#            unit = percent
#        [[[extraHumid5]]]
#            source_field = 23
#            unit = percent
#        [[[extraHumid6]]]
#            source_field = 24
#            unit = percent
#        [[[extraHumid7]]]
#            source_field = 25
#            unit = percent
        [[[soilTemp1]]]
            source_field = 13
            unit = degree_C
        [[[soilTemp2]]]
            source_field = 14
            unit = degree_C
        [[[soilTemp3]]]
            source_field = 15
            unit = degree_C
        [[[soilTemp4]]]
            source_field = 16
            unit = degree_C
        [[[soilMoist1]]]
            source_field = 29
            unit = centibar
        [[[soilMoist2]]]
            source_field = 30
            unit = centibar
        [[[soilMoist3]]]
            source_field = 31
            unit = centibar
        [[[soilMoist4]]]
            source_field = 32
            unit = centibar
        [[[leafTemp1]]]
            source_field = 9
            unit = degree_C
        [[[leafTemp2]]]
            source_field = 10
            unit = degree_C
        [[[leafWet1]]]
            source_field = 26
            unit = count
        [[[leafWet2]]]
            source_field = 27
            unit = count
        [[[sunshineDur]]]
            source_field = 37
            unit = minute
        [[[rainDur]]]
            source_field = 39
            unit = minute
